`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 03/28/2020 07:24:44 AM
// Design Name: 
// Module Name: RISC_CPU
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module RISC_CPU(
        input clk, reset,
        // LOGIC CIRCUIT
        input PS,
        input Z,
        input BS1,
        input BS0,
        output output_lgate,
                    //  input BS1,
        // IM
        output instr,
        // MUX C
        input BrA,
        input RAA,   
        output output_muxc,
        
        // DECODER
        output CS11, BA1, AA1, MB1, MA1, SH1, FS1, MW1, PS1, BS11, MD1, DA1, RW1,
        
        // REG FILE 1
        input AA, BA,
        output A_data, B_data,
        
        // MUX A
        input pc_1,
        input MA, // SAME AS MA1???????????????????????
        output [31:0] Bus_A,
        
        // MUX B
        input MB, // SAME AS MB1????????????????????
        output [31:0] Bus_B,
        
        
        // MODIFIED FUNCTION UNIT
        input [4:0] SH,
        input [4:0] FS,
        output [15:0] Z1, C, N, V, N_xor_V,
        output [15:0] F,
        
        
        // DATA MEMORIES
        output [31:0] data_out,
        
        // MUX D
        output [31:0] Bus_D
        
    );
    
    logic_circuit(PS, Z, BS1, BS0, output_lgate);
    MUX_C(BS1, BrA, RAA,  output_lgate, output_muxc);
    INSTRUCTION_MEMORY(output_muxc,  instr);
    INSTRUCTION_DECODER(instr, CS11, BA1, AA1, MB1, MA1, SH1, FS1, MW1, PS1, BS11, MD1, DA1, RW1);
    REGISTER_FILE_1(clk, reset, AA, BA, A_data, B_data);
    MUX_A(A_data, pc_1, MA, Bus_A);
    MUX_B(B_data, CS11, MB, Bus_B);
    MODIFIED_FUNCTION_UNIT(Bus_A, Bus_B, SH, FS, Z, C, N, V, N_xor_V, F);
    DATA_MEMORY1(clk, Bus_A, data_out);
    DATA_MEMORY2(clk, Bus_A, Bus_B, MW1);
    MUX_D(F, data_out, MD, N_xor_V, Bus_D);
    REGISTER_FILE2(Bus_D, RW1, DA1);
    
    
endmodule
